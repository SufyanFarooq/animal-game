// This file was generated by Slater.app - index.js


gsap.registerPlugin(ScrollTrigger, SplitText, ScrambleTextPlugin);

let scroll;
let transitionOffset = 425;

initPageTransitions();

const scrambleCharacters = "01";

// Animation - Page Loader
function initLoaderShort() {

    var tl = gsap.timeline();

    tl.call(function() {
        scroll.start();

        gsap.set($('.loading-screen'), {
            autoAlpha: 0,
        });

    }, null, 0);

    tl.call(function() {
        pageTransitionOut();
    }, null, 0);

    tl.call(function() {
        scroll.start();
    }, null, 0);

}

// Animation - Page Loader
function initLoader() {

    var tl = gsap.timeline();

    tl.call(function() {
        scroll.stop();

        gsap.to($('.loading-screen .loading-visual'), {
            opacity: 1,
            duration: 0.5,
            ease: "ease"
        });

        gsap.to($('.loading-screen .loading-visual-changing-word'), {
            duration: 0.8,
            delay: 1.6,
            scrambleText: {
                text: "Initializing Roadmap ...",
                speed: 0.8,
            }
        });

        gsap.to($('.loading-screen .loading-visual-percentage'), {
            delay: 0.3,
            textContent: 100,
            duration: 2.2,
            snap: {
                textContent: 1
            }
        });

        gsap.set($('.loading-screen .loading-visual-bar-part'), {
            opacity: 1,
            delay: 0.6,
            stagger: 0.075,
        });

        gsap.to($('.loading-screen'), {
            delay: 3,
            autoAlpha: 0,
            duration: 0.8,
            ease: "Power2.easeInOut",
        });

        gsap.to($('.loading-screen .loading-visual'), {
            delay: 2.6,
            scale: 0.5,
            rotate: 0.001,
            duration: 1.4,
            ease: "Power4.easeIn",
        });

    }, null, 0);

    tl.call(function() {
        pageTransitionOut();
    }, null, 3);

}

// Animation - Page Leave
function pageTransitionIn() {
    var tl = gsap.timeline();

    if (document.querySelector('.lorem-ipsum')) {}

    tl.call(function() {
        scroll.stop();
    });

    tl.set($('.loading-transition'), {
        autoAlpha: 0,
    });

    tl.to($('.loading-transition'), {
        autoAlpha: 1,
        duration: 0.4,
        ease: "Power2.easeInOut",
    });

    tl.to($('.loading-transition'), {
        delay: 0.1,
        autoAlpha: 0,
        duration: 0.8,
        ease: "Power2.easeInOut",
    });
}

// Animation - Page Enter
function pageTransitionOut() {
    var tl = gsap.timeline();

    tl.call(function() {
        scroll.stop();
        scroll.scrollTo(0, {
            immediate: true,
            force: true,
            lock: true,
            duration: 0.0166
        });
    }, null, 0);

    tl.call(function() {
        scroll.stop();
        scroll.scrollTo(0, {
            immediate: true,
            force: true,
            lock: true,
            duration: 0.0166
        });
    }, null, 0.5);

    tl.call(function() {
        scroll.stop();
        scroll.scrollTo(0, {
            immediate: true,
            force: true,
            lock: true,
            duration: 0.0166
        });
        initCheckWindowHeight();
    }, null, 0.9);

    tl.call(function() {

        // Scramble transition text
        $('[data-transition-scramble]').each(function() {
            var scrambleStagger = $(this).data('transition-scramble');
            gsap.to($(this).find('.single-char'), {
                duration: 0.3,
                stagger: scrambleStagger,
                scrambleText: {
                    text: "{original}",
                    speed: 0,
                    chars: scrambleCharacters,
                    tweenLength: false,
                    revealDelay: 0.2,
                }
            });

            gsap.set($(this).find('.single-char'), {
                opacity: 1,
                stagger: scrambleStagger,
            });
        });

    }, null, 0.5);

    tl.call(function() {

        // Only for homepage
        var headerHomeLoop = document.getElementById('header-home-loop');

        // Check if it has the video else = not homepage so scroll can start
        if (headerHomeLoop) {

            // Start Video home
            headerHomeLoop.muted = true;
            headerHomeLoop.addEventListener('canplaythrough', function() {
                headerHomeLoop.play();
            });
            headerHomeLoop.load();
        } else {
            // if page = not homepage
            setTimeout(function() {
                scroll.start();
            }, 1000);
        }
    }, null, 0);

}

function initPageTransitions() {

    // Reset scroll on page next
    history.scrollRestoration = "manual";

    barba.hooks.afterEnter(() => {
        window.scrollTo(0, 0);
        ScrollTrigger.refresh();
    });

    barba.hooks.leave(() => {
        initBasicFunctions();
    });

    // Functions Before
    function initResetDataBefore() {
        if ($(window).width() < 992) {
            $('[data-navigation-status]').attr('data-navigation-status', 'not-active');
        }
        $('[data-ips-modal-status]').attr('data-ips-modal-status', 'not-active');
        $('[data-ips-modal-id]').attr('data-ips-modal-single-status', 'not-active');

        gsap.to($('.social-menu'), {
            yPercent: 0,
            rotate: 0.001,
            ease: "Power4.easeInOut",
            duration: 1,
            clearProps: "all"
        });
    }

    // Functions After
    function initResetDataAfter() {
        if ($(window).width() < 992) {
            $('[data-navigation-status]').attr('data-navigation-status', 'not-active');
        }
        $('[data-scrolling-direction]').attr('data-scrolling-direction', 'down');
        $('[data-scrolling-started]').attr('data-scrolling-started', 'false');

    }

    barba.init({
        sync: true,
        debug: true,
        timeout: 7000,
        transitions: [{
            name: 'self',
            async leave(data) {
                pageTransitionIn(data.current);
                initResetDataBefore();
                await delay(transitionOffset);
                initBarbaNavUpdate(data);
                initResetDataAfter();
                scroll.destroy();
                data.current.container.remove();
            },
            async enter(data) {
                pageTransitionOut(data.next);
            },
            async beforeEnter(data) {
                ScrollTrigger.getAll().forEach(t => t.kill());
                initResetWebflow(data);
                initSmoothScroll(data.next.container);
                initScript();
            },
        }, {
            name: 'default',
            once(data) {
                initSmoothScroll(data.next.container);
                initScript();
                initLoader();
            },
            async leave(data) {
                pageTransitionIn(data.current);
                initResetDataBefore();
                await delay(transitionOffset);
                initBarbaNavUpdate(data);
                initResetDataAfter();
                scroll.destroy();
                data.current.container.remove();
            },
            async enter(data) {
                pageTransitionOut(data.next);
            },
            async beforeEnter(data) {
                ScrollTrigger.getAll().forEach(t => t.kill());
                initResetWebflow(data);
                initSmoothScroll(data.next.container);
                initScript();
            },
        }]
    });

    function initSmoothScroll(container) {
        initLenis();
        ScrollTrigger.refresh();
    }
}

function initLenis() {

    // Lenis: https://github.com/studio-freight/lenis
    scroll = new Lenis({
        duration: 1
    });

    scroll.on('scroll', ScrollTrigger.update);

    gsap.ticker.add((time) => {
        scroll.raf(time * 1000);
    });

    gsap.ticker.lagSmoothing(0);
}

// Don't touch
function delay(n) {
    n = n || 2000;
    return new Promise((done) => {
        setTimeout(() => {
            done();
        }, n);
    });
}

/**
 * Fire all scripts on page load
 */
function initScript() {
    initCheckWindowHeight();
    initBasicFunctions();
    initSplitText();
    initScrollTriggerPlayVideoInview();
    initLenisCheckScrollUpDown();
    initScrollToAnchorLenis();
    initCheckID();
    initCustomCursorV2();
    initMarqueeScrollV2();
    initFlickitySlider();
    initScrolltriggerAnimations();
}

/**
 * Reset Webflow
 */
function initResetWebflow(data) {
    let parser = new DOMParser();
    let dom = parser.parseFromString(data.next.html, "text/html");
    let webflowPageId = dom.querySelector("html").getAttribute("data-wf-page");
    document.documentElement.setAttribute("data-wf-page", webflowPageId);
    window.Webflow.destroy();
    window.Webflow.ready();
    window.Webflow.require("ix2").init();
}

/**
 * Barba Update Links outside Main on page Transition
 */
function initBarbaNavUpdate(data) {

    const updateItems = $(data.next.html).find('[data-barba-update]');

    $('[data-barba-update]').each(function(index) {
        if ($(updateItems[index]).get(0)) {
            const newLinkStatus = $(updateItems[index]).get(0).getAttribute('data-link-status');
            $(this).attr('data-link-status', newLinkStatus);
        }
    });
}

/**
 * Window Inner Height Check
 */
function initCheckWindowHeight() {

    // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh-in-px', `${vh}px`);
}

/**
 * Basic Functions
 */
function initBasicFunctions() {

    // Open Navigation
    $('[data-navigation-toggle="open"]').on('mouseenter click', function() {
        if ($('[data-navigation-status]').attr('data-navigation-status') != 'active') {

            $('[data-navigation-status]').attr('data-navigation-status', 'active');

            gsap.set($('.menu-bar .menu-items').find('.single-char'), {
                opacity: 0
            });

            setTimeout(function() {

                $('.menu-bar .menu-items').find('.single-char').each(function(index) {
                    var originalChar = $(this).data('original-char');
                    setTimeout(() => {
                        gsap.to($(this), {
                            duration: 0.3,
                            scrambleText: {
                                text: originalChar,
                                speed: 0,
                                chars: scrambleCharacters,
                                tweenLength: false,
                                revealDelay: 0.2,
                            }
                        });
                        gsap.set($(this), {
                            opacity: 1,
                        });
                    }, 20 * index);
                });
            }, 400);
        }
    });

    // Close Navigation
    $('[data-navigation-toggle="close"]').on('mouseenter click', function() {
        $('[data-navigation-status]').attr('data-navigation-status', 'not-active');
    });

    // Key ESC - Close Navigation
    $(document).keydown(function(e) {
        if (e.keyCode == 27) {
            if ($('[data-navigation-status]').attr('data-navigation-status') == 'active') {
                $('[data-navigation-status]').attr('data-navigation-status', 'not-active');
            }
        }
    });

    // Scramble hover text
    $('[data-hover-scramble]').on('mouseenter click', function() {
        var scrambleStagger = $(this).data('hover-scramble');
        $(this).find('.single-char').each(function(index) {
            var originalChar = $(this).data('original-char');
            setTimeout(() => {
                gsap.to($(this), {
                    duration: 0.3,
                    scrambleText: {
                        text: originalChar,
                        speed: 0,
                        chars: scrambleCharacters,
                        tweenLength: false,
                        revealDelay: 0.2,
                    }
                });
            }, 20 * index);
        });
    });

    // Start home transition
    $('[data-home-transition="start"]').click(function() {

        var headerHomeTransition = document.getElementById('header-home-transition');
        var headerHomeVideoDuration = 5;

        // Update video length
        headerHomeTransition.addEventListener('loadedmetadata', function() {
            headerHomeVideoDuration = headerHomeTransition.duration;
        });

        // Set click box on display: none;
        gsap.set($('[data-home-transition="start"]'), {
            display: "none"
        });

        // Set all about text opacity: 0;
        gsap.set($('.section-about').find('.single-char'), {
            opacity: 0,
        });

        gsap.set($('.section-about'), {
            autoAlpha: 1,
        });

        gsap.to($(headerHomeTransition).parent(), {
            opacity: 1,
            duration: 0.5,
            ease: "Power4.easeIn",
            onStart: () => videoHomeTransition(),
            onComplete: () => removeVideoHomeLoop()
        });

        gsap.fromTo($('.home-header-h1-span-line-1'), {
            xPercent: 0,
            rotate: 0.001,
        }, {
            xPercent: -100,
            rotate: 0.001,
            duration: 1.5,
            ease: "Power4.easeIn"
        });

        gsap.fromTo($('.home-header-h1-span-line-2'), {
            xPercent: 0,
            rotate: 0.001,
        }, {
            xPercent: 100,
            rotate: 0.001,
            duration: 1.5,
            ease: "Power4.easeIn"
        });

        gsap.fromTo($('.home-header-row-corner-text, .link-skip-intro'), {
            rotate: 0.001,
            autoAlpha: 1,
        }, {
            rotate: 0.001,
            autoAlpha: 0,
            duration: 1.5,
            ease: "Power4.easeIn"
        });

        gsap.fromTo($('.solid-skip-cursor-row'), {
            autoAlpha: 1,
            rotate: 0.001,
            scale: 1,
        }, {
            rotate: 0.001,
            scale: 0.8,
            autoAlpha: 0,
            duration: 0.5,
            ease: "Power4.easeInOut"
        });

        function removeVideoHomeLoop() {
            setTimeout(function() {
                gsap.set($('.overlay-video-loop'), {
                    display: "none"
                });
            }, 1000);
        }

        function videoHomeTransition() {
            headerHomeTransition.muted = true;
            headerHomeTransition.load();
            headerHomeTransition.play();
            headerHomeTransition.pause();
            headerHomeTransition.currentTime = 0.5;
            headerHomeTransition.play();
            setTimeout(function() {
                videoHomeTransitionDone();
            }, (headerHomeVideoDuration - 1.5) * 1000);
        }

        function videoHomeTransitionDone() {

            gsap.to($('.section-about').find('.single-char'), {
                duration: 0.15,
                stagger: 0.015,
                scrambleText: {
                    text: "{original}",
                    speed: 0,
                    chars: scrambleCharacters,
                    tweenLength: false,
                    revealDelay: 0.15,
                }
            });

            gsap.set($('.section-about').find('.single-char'), {
                opacity: 1,
                stagger: 0.015,
            });

            gsap.to($(headerHomeTransition).parent(), {
                autoAlpha: 0,
                duration: 2,
                ease: "none",
                delay: 0.5,
            });

            setTimeout(function() {
                scroll.start();
            }, 1500);
        }
    });

    // Start home transition
    $('[data-home-transition="skip"]').click(function() {

        scroll.start();

        gsap.set($('[data-home-transition="start"]'), {
            display: "none"
        });

        gsap.fromTo($(
            '.overlay-video-loop, .home-header-h1-span-line-1, .home-header-h1-span-line-2, .home-header-row-corner-text, .link-skip-intro, .solid-skip-cursor-row'
        ), {
            scale: 1,
            rotate: 0.001,
            autoAlpha: 1,
        }, {
            scale: 1,
            rotate: 0.001,
            autoAlpha: 0,
            duration: 1,
            ease: "Power4.easeInOut"
        });

        gsap.to($('.section-about'), {
            autoAlpha: 1,
            duration: 1,
            ease: "Power4.easeInOut"
        });
    });

    // Show investors amount collection
    $('.investors-cards-amount').text("(" + String($('.hidden-collection-list-for-count > *')
        .children().length).padStart(2, '0') + ")");
    $('.partners-cards-amount').text("(" + String($('.hidden-collection-list-for-count-partners > *')
        .children().length).padStart(2, '0') + ")");
    $('.ips-cards-amount').text("(" + String($('.section-ips-slider .flickity-carousel').children()
        .length).padStart(2, '0') + ")");

    // IPS MODAL & SLIDER

    // Give unque id's to items of IPS
    $('.ips-modal-list [data-ips-modal-id]').each(function(index) {
        $(this).attr('data-ips-modal-id', index);
    });

    $('.section-ips-slider .flickity-slide').each(function(index) {
        $(this).find('[data-ips-modal-id]').attr('data-ips-modal-id', index);
        $(this).find('.ip-card-scroll-to').closest('.flickity-click').attr('data-anchor-target',
            '#IPS-card-scroll-to' + index);
        $(this).find('.ip-card-scroll-to').attr('id', 'IPS-card-scroll-to' + index);
    });

    // Open modal on click slider
    $('[data-ips-modal-toggle="open"]').on('click', function() {
        var dataIPSModalID = $(this).attr('data-ips-modal-id');
        if ($('[data-ips-modal-status]').attr('data-ips-modal-status') == 'not-active') {
            $('[data-ips-modal-status]').attr('data-ips-modal-status', 'active');
        }
        $('[data-ips-modal-id]').attr('data-ips-modal-single-status', 'not-active');
        $('[data-ips-modal-id="' + dataIPSModalID + '"]').attr('data-ips-modal-single-status',
            'active');
        scroll.stop();
    });

    // Close Modal
    $('[data-ips-modal-toggle="close"]').on('click', function() {
        $('[data-ips-modal-status]').attr('data-ips-modal-status', 'not-active');
        $('[data-ips-modal-id]').attr('data-ips-modal-single-status', 'not-active');
        scroll.start();
    });

    // Key ESC - Close Modal
    $(document).keydown(function(e) {
        if (e.keyCode == 27) {
            if ($('[data-ips-modal-status]').attr('data-ips-modal-status') == 'active') {
                $('[data-ips-modal-status]').attr('data-ips-modal-status', 'not-active');
                $('[data-ips-modal-id]').attr('data-ips-modal-single-status', 'not-active');
                scroll.start();
            }
        }
    });

    // Click item in modal
    $('.single-ips-item-btn').on('click', function() {
        var dataIPSModalItemID = $(this).attr('data-ips-item-id');
        $(this).closest('.single-ips-modal').find('[data-ips-item-id]').attr('data-ips-item-status',
            'not-active');
        $(this).closest('.single-ips-modal').find('[data-ips-item-id="' + dataIPSModalItemID + '"]')
            .attr('data-ips-item-status', 'active');
    });

    $('.single-ips-modal').each(function() {
        // Find biggest item and add position relative
        let elementLargestHeight = 0;
        let elementLargest = null;

        $(this).find('.single-ips-item-change').each(function() {
            var element = $(this);
            var elementHeight = element.find('.single-ips-item-change-p').text().length;

            if (elementHeight > elementLargestHeight) {
                elementLargestHeight = elementHeight;
                elementLargest = element;
            }
        });

        if (elementLargest != null) {
            elementLargest.addClass('relative');
        }
    });
}

/**
 * GSAP Split Text
 */
function initSplitText() {

    var splitTextTransitionScramble = new SplitText(
        "[data-transition-scramble], [data-split-text]", {
            type: "words, chars",
            wordsClass: "single-word",
            charsClass: "single-char"
        });
    $('[data-transition-scramble] .single-char').each(function() {
        var singleChar = $(this);
        singleChar.css('opacity', '0').attr('data-original-char', singleChar.text());
    });

    $('[data-split-text] .single-char').each(function() {
        var singleChar = $(this);
        singleChar.attr('data-original-char', singleChar.text());
    });

}

/**
 * Play Video Inview
 */
function initScrollTriggerPlayVideoInview() {

    let allVideoDivs = gsap.utils.toArray('.playpauze');

    allVideoDivs.forEach((videoDiv, i) => {

        let videoElem = videoDiv.querySelector('video')

        ScrollTrigger.create({
            trigger: videoElem,
            start: '0% 120%',
            end: '100% -20%',
            onEnter: () => videoElem.play(),
            onEnterBack: () => videoElem.play(),
            onLeave: () => videoElem.pause(),
            onLeaveBack: () => videoElem.pause(),
        });
    });
}

/**
 * Lenis - Check Scroll up or Down
 */

function initLenisCheckScrollUpDown() {

    var lastScrollTop = 0
    var threshold = 50;
    var thresholdTop = 50;

    function startCheckScroll() {
        scroll.on('scroll', (e) => {
            var nowScrollTop = e.targetScroll;

            if (Math.abs(lastScrollTop - nowScrollTop) >= threshold) {

                // Check Scroll Direction
                if (nowScrollTop > lastScrollTop) {
                    $("[data-scrolling-direction]").attr('data-scrolling-direction', 'down');
                } else {
                    $("[data-scrolling-direction]").attr('data-scrolling-direction', 'up');
                }
                lastScrollTop = nowScrollTop;

                // Check if Scroll Started
                if (nowScrollTop > thresholdTop) {
                    $("[data-scrolling-started]").attr('data-scrolling-started', 'true');
                } else {
                    $("[data-scrolling-started]").attr('data-scrolling-started', 'false');
                }
            }
        });
    }
    startCheckScroll();

    // Reset instance
    barba.hooks.after(() => {
        startCheckScroll();
    });
}

/**
 * Lenis - ScrollTo Anchor Links
 */
function initScrollToAnchorLenis() {

    $("[data-anchor-target]").click(function() {

        let targetScrollToAnchorLenis = $(this).attr('data-anchor-target');
        scroll.scrollTo(targetScrollToAnchorLenis, {
            duration: 1,
            easing: (x) => (x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2),
            force: true
        });
        // scroll.scrollTo(0,{immediate: true, force: true, lock: true, duration: 0.0166});

    });
}

/**
 * Check ID of Sections
 */
function initCheckID() {

    function checkIDSection() {
        var IDSections = document.querySelectorAll("[data-section-id]");

        for (var i = 0; i < IDSections.length; i++) {
            var IDSection = IDSections[i];
            var IDSectionTop = IDSection.getBoundingClientRect().top;
            var IDSectionBottom = IDSection.getBoundingClientRect().bottom;
            var IDObserverOffset = $(window).innerHeight() / 2;

            if (IDSectionTop <= IDObserverOffset && IDSectionBottom >= IDObserverOffset) {

                // Check id
                var IDSectionActive = $(IDSection).attr('data-section-id');
                if ($('[data-current-section-id]').attr('data-current-section-id') ==
                    IDSectionActive) {} else {
                    $('[data-current-section-id]').attr('data-current-section-id', IDSectionActive);
                }
            }
        }
    }

    // Page load init
    checkIDSection();

    // Check when scrolling
    document.addEventListener("scroll", function() {
        checkIDSection();
    });

    // Check on page-transition
    barba.hooks.after(() => {
        checkIDSection();
    });

}

/**
 * Custom Cursor
 */
function initCustomCursorV2() {

    const cursorObject = document.querySelector(".custom-cursor");
    const cursorPos = {
        x: window.innerWidth / 2,
        y: window.innerHeight / 2
    };
    const mousePos = {
        x: cursorPos.x,
        y: cursorPos.y
    };

    var cursorMoveSpeed = 0.15;
    var cursorDragSpeed = 0.75;
    var cursorSpeed = cursorMoveSpeed;
    var cursorActive = false;

    const xCursorSet = gsap.quickSetter(cursorObject, "x", "px");
    const yCursorSet = gsap.quickSetter(cursorObject, "y", "px");

    window.addEventListener("mousemove", e => {
        mousePos.x = e.x;
        mousePos.y = e.y;
    });

    gsap.ticker.add(customCursor);

    function customCursor() {
        if (!cursorActive) {
            const dt = 1.0 - Math.pow(1.0 - cursorSpeed, gsap.ticker.deltaRatio());
            cursorPos.x += (mousePos.x - cursorPos.x) * dt;
            cursorPos.y += (mousePos.y - cursorPos.y) * dt;
            xCursorSet(cursorPos.x);
            yCursorSet(cursorPos.y);
        }
    }

    // Flickity (update position on drag with Flickity)
    var flickityCursorCarousel = $('[data-flickity-slider-type]');

    flickityCursorCarousel.on('dragMove.flickity', function(e, mousemove) {

        mousePos.x = e.clientX;
        mousePos.y = e.clientY;
        cursorSpeed = cursorDragSpeed; // set Drag Speed

        gsap.to({}, 0.0, {
            onUpdate: function() {
                gsap.set(cursorObject, {
                    x: mousePos.x,
                    y: mousePos.y
                });
            }
        });

    });

    flickityCursorCarousel.on('dragEnd.flickity', function() {
        cursorActive = false;
        cursorSpeed = cursorMoveSpeed;
    });

    // Mouse Init
    $(document).on('mousemove', function() {
        if ($('[data-cursor-init]').attr('data-cursor-init') == 'false') {
            $('[data-cursor-init]').attr('data-cursor-init', 'true');
        }
    });

    // Normal Hover
    $('[data-cursor-bubble-text]').on('mouseenter', function() {
        let dataCursorText = $(this).data('cursor-bubble-text');
        $('[data-cursor-bubble]').attr('data-cursor-bubble', 'active');
        $('.custom-cursor').find('.cursor-bubble .cursor-text').text(dataCursorText);

        gsap.to($('.custom-cursor').find('.cursor-bubble .cursor-text'), {
            duration: 0.8,
            delay: 0.4,
            scrambleText: {
                text: "{original}",
                speed: 0.8,
                chars: scrambleCharacters,
            }
        });
    });
    $('[data-cursor-bubble-text]').on('mouseleave', function() {
        $('[data-cursor-bubble]').attr('data-cursor-bubble', 'not-active');
    });
}

/**
 * Marquee on Scroll Direction
 */
function initMarqueeScrollV2() {

    $('[data-marquee-target]').each(function() {

        let marquee = $(this);

        let marqueeItemsWidth = marquee.find(".marquee-content").width();
        let marqueeSpeed = marquee.attr('data-marquee-speed') * (marqueeItemsWidth / $(window)
            .width());

        // Duplicate .marquee-content
        if (marquee.attr('data-marquee-duplicate') == "3") {
            // Custom function to clone / append 3x
            for (var i = 0; i < 3; i++) {
                var clonedMarqueeContent = marquee.find(".marquee-content").clone();
                marquee.find(".marquee-scroll").append(clonedMarqueeContent);
            }
        } else {
            var clonedMarqueeContent = marquee.find(".marquee-content").clone();
            marquee.find(".marquee-scroll").append(clonedMarqueeContent);
        }

        // Speed up Marquee on Tablet & Mobile
        if ($(window).width() <= 540) {
            marqueeSpeed = marqueeSpeed * 0.25;
        } else if ($(window).width() <= 1024) {
            marqueeSpeed = marqueeSpeed * 0.5;
        }

        let marqueeDirection;
        if (marquee.attr('data-marquee-direction') == 'right') {
            marqueeDirection = -1;
        } else {
            marqueeDirection = 1;
        }

        let marqueeContent = gsap.to(marquee.find('.marquee-content'), {
            xPercent: -100,
            repeat: -1,
            duration: marqueeSpeed,
            ease: "linear",
            paused: true
        }).totalProgress(0.5);

        gsap.set(marquee.find(".marquee-content"), {
            xPercent: 50
        });

        ScrollTrigger.create({
            trigger: marquee,
            start: "top bottom",
            end: "bottom top",
            onUpdate(self) {
                if (self.direction !== marqueeDirection) {
                    marqueeDirection *= -1;
                    if (marquee.attr('data-marquee-direction') == 'right') {
                        gsap.to([marqueeContent], {
                            timeScale: (marqueeDirection * -1),
                            overwrite: true
                        });
                    } else {
                        gsap.to([marqueeContent], {
                            timeScale: marqueeDirection,
                            overwrite: true
                        });
                    }
                }
                self.direction === -1 ? marquee.attr('data-marquee-status', 'normal') : marquee
                    .attr('data-marquee-status', 'inverted');
            },
            onEnter: () => marqueeContent.play(),
            onEnterBack: () => marqueeContent.play(),
            onLeave: () => marqueeContent.pause(),
            onLeaveBack: () => marqueeContent.pause()
        });

        // Extra speed on scroll
        marquee.each(function() {

            let triggerElement = $(this);
            let targetElement = $(this).find('.marquee-scroll');
            let marqueeScrollSpeed = $(this).attr('data-marquee-scroll-speed');

            let tl = gsap.timeline({
                scrollTrigger: {
                    trigger: $(this),
                    start: "0% 100%",
                    end: "100% 0%",
                    scrub: 0
                }
            });

            if (triggerElement.attr('data-marquee-direction') == 'left') {
                tl.fromTo(targetElement, {
                    x: marqueeScrollSpeed + "vw",
                }, {
                    x: marqueeScrollSpeed * -1 + "vw",
                    ease: "none"
                });
            }

            if (triggerElement.attr('data-marquee-direction') == 'right') {
                tl.fromTo(targetElement, {
                    x: marqueeScrollSpeed * -1 + "vw",
                }, {
                    x: marqueeScrollSpeed + "vw",
                    ease: "none"
                });
            }
        });
    });
}

/**
 * Flickity Slider
 */
function initFlickitySlider() {

    // Source
    // https://flickity.metafizzy.co/

    // Slider type: Credits

    $('[data-flickity-slider-type="credits"]').each(function(index) {

        var sliderIndexID = 'flickity-slider-type-credits-id-' + index;
        $(this).attr('id', sliderIndexID);

        var sliderThis = $(this);

        var flickitySliderGroup = document.querySelector('#' + sliderIndexID +
            ' .flickity-carousel');

        let flickitySlider = new Flickity(flickitySliderGroup, {
            // options
            watchCSS: true,
            contain: false,
            wrapAround: false,
            dragThreshold: 10,
            prevNextButtons: false,
            pageDots: false,
            cellAlign: 'center',
            selectedAttraction: 0.015,
            friction: 0.25,
            percentPosition: true,
            initialIndex: 1
        });

        var windowWidth = $(window).width();
        var flickitySlideWidth = sliderThis.find('.flickity-slide.is-selected').innerWidth();
        var flickitySize = (flickitySlideWidth / windowWidth) * windowWidth;

        // Source: https://github.com/elcontraption/flickity-transformer
        // Codepen: https://codepen.io/coder787/pen/vYgjamR
        const transformer = new FlickityTransformer(flickitySlider, [{
                name: "scale",
                stops: [
                    [windowWidth * -1, 0.5],
                    [0, 1],
                    [windowWidth, 0.5]
                ]
            },
            {
                // Declare perspective here, before rotateY. At least two stops are required, hence the duplication.
                name: "perspective",
                stops: [
                    [0, (windowWidth * 1)],
                    [1, (windowWidth * 1)]
                ]
            },
            {
                name: "rotateY",
                stops: [
                    [windowWidth * -1, -45],
                    [0, 0],
                    [windowWidth, 45]
                ]
            }
        ]);

    });

    $('[data-flickity-slider-type="cards"]').each(function(index) {

        var sliderIndexID = 'flickity-slider-type-cards-id-' + index;
        $(this).attr('id', sliderIndexID);

        var sliderThis = $(this);

        var flickitySliderGroup = document.querySelector('#' + sliderIndexID +
            ' .flickity-carousel');
        var flickitySlider = sliderThis.find('.flickity-carousel').flickity({
            // options
            watchCSS: true,
            contain: true,
            wrapAround: false,
            dragThreshold: 10,
            prevNextButtons: false,
            pageDots: false,
            cellAlign: 'left',
            selectedAttraction: 0.015,
            friction: 0.25,
            percentPosition: true,
            freeScroll: false,
            on: {
                'dragStart': () => {
                    sliderThis.find('.flickity-click').css("pointer-events", "none");
                },
                'dragEnd': () => {
                    sliderThis.find('.flickity-click').css("pointer-events", "auto");
                },
                change: function() {
                    updatePagination();
                }
            }
        });

        // Flickity instance
        var flkty = flickitySlider.data('flickity');

        // previous
        var prevButton = sliderThis.find('[data-flickity-control="prev"]').on('click', function() {
            flickitySlider.flickity('previous');
        });
        // next
        var nextButton = sliderThis.find('[data-flickity-control="next"]').on('click', function() {
            flickitySlider.flickity('next');
        });

        sliderThis.find('.flickity-click').on('click', function() {
            var slideClickIndex = $(this).closest('.flickity-slide').index();
            flickitySlider.flickity('select', slideClickIndex);
        });

        function updatePagination() {

            var slidesCount = sliderThis.find('.flickity-slide').length;
            var slidesPerView = 2;

            if ($(window).width() > 991) {
                slidesPerView = 3;
            } else if ($(window).width() < 768) {
                slidesPerView = 1;
            }

            // Change modal to active slide
            if (document.querySelector("[data-ips-modal-id]")) {
                $('[data-ips-modal-id]').attr('data-ips-modal-single-status', 'not-active');
                $('[data-ips-modal-id="' + flkty.selectedIndex + '"]').attr(
                    'data-ips-modal-single-status', 'active');
            }

            // enable/disable previous/next buttons
            if (!flkty.cells[flkty.selectedIndex - 1]) {
                prevButton.attr('data-flickity-control-disabled', 'true');
                nextButton.attr('data-flickity-control-disabled',
                    'false'); // <-- remove disabled from the next
            } else if (!flkty.cells[flkty.selectedIndex + parseInt(slidesPerView)]) {
                nextButton.attr('data-flickity-control-disabled', 'true');
                prevButton.attr('data-flickity-control-disabled',
                    'false'); //<-- remove disabled from the prev
            } else {
                prevButton.attr('data-flickity-control-disabled', 'false');
                nextButton.attr('data-flickity-control-disabled', 'false');
            }
        }
    });

}

/**
 * Scrolltrigger Animations Desktop + Mobile
 */
function initScrolltriggerAnimations() {

    if (document.querySelector("[data-scroll-scramble]")) {

        gsap.set($('[data-scroll-scramble]').find('.single-char'), {
            opacity: 0
        });

        $('[data-scroll-scramble]').each(function(index) {
            let triggerElement = $(this);
            let targetElement = $(this).find('.single-char');
            var scrambleStagger = $(this).data('scroll-scramble');

            let tl = gsap.timeline({
                scrollTrigger: {
                    trigger: triggerElement,
                    start: "0% 90%",
                    end: "100% 0%",
                    toggleActions: "play none none none",
                }
            });

            tl.to(targetElement, {
                duration: 0.3,
                stagger: scrambleStagger,
                scrambleText: {
                    text: "{original}",
                    speed: 0,
                    chars: scrambleCharacters,
                    tweenLength: false,
                    revealDelay: 0.2,
                }
            });

            tl.set(targetElement, {
                opacity: 1,
                stagger: scrambleStagger,
            }, "<");

        });
    }

    if (document.querySelector("[data-investor-card-scroll-reveal]")) {
        $('[data-investor-card-scroll-reveal]').parent().parent().each(function() {
            let triggerElement = $(this);
            let targetElement = $(this).find('.investors-card .investors-logo img');

            let tl = gsap.timeline({
                scrollTrigger: {
                    trigger: triggerElement,
                    start: "0% 90%",
                    end: "100% 0%",
                    toggleActions: "play none none none",
                }
            });

            tl.from(targetElement, {
                autoAlpha: 0,
                delay: 0.3,
                duration: 0.4,
                ease: "Power4.easeIn",
                stagger: 0.05,
                clearProps: "all"
            });

        });
    }

    $('.section-footer-wrap').each(function() {
        let triggerElement = $(this);
        let targetElement = $('.social-menu');
        let targetElementPNG = $('.prefooter-image-front-png');
        let targetElementJPG = $('.prefooter-bg-back-wrap');

        let tl = gsap.timeline({
            scrollTrigger: {
                trigger: triggerElement,
                start: "0% 100%",
                end: "100% 0%",
                toggleActions: "play none none reverse",
            }
        });

        tl.fromTo(targetElement, {
            yPercent: 0,
            rotate: 0.001,
        }, {
            yPercent: 102,
            rotate: 0.001,
            ease: "Power4.easeInOut",
            duration: 1
        });

        let tl2 = gsap.timeline({
            scrollTrigger: {
                trigger: targetElementPNG,
                start: "0% 100%",
                end: "100% 0%",
                scrub: 0.25,
            }
        });

        tl2.from(targetElementPNG, {
            yPercent: 25,
            rotate: 0.001,
            ease: "none",
        });

        tl2.from(targetElementJPG, {
            yPercent: -20,
            rotate: 0.001,
            ease: "none",
        }, "<");
    });

    // Disable GSAP on Mobile
    // Source: https://greensock.com/forums/topic/26325-disabling-scrolltrigger-on-mobile-with-mediamatch/
    ScrollTrigger.matchMedia({

        // Desktop Only Scrolltrigger 
        "(min-width: 991px)": function() {

            if (document.querySelector('.section-home-how-first')) {
                // Scrolltrigger Animation : Example
                $('.section-home-how-first').each(function(index) {
                    let triggerElement = $(this);
                    let targetElement = $(this).find('.section-how-panel');
                    let targetElementHome = $(this).closest('.section-sticky-wrapper-top').find(
                        '.home-header-about-text-container');
                    let targetElementSpline = $(this).closest('.section-sticky-wrapper-top').find(
                        '.spline-scene');

                    let tl = gsap.timeline({
                        scrollTrigger: {
                            trigger: triggerElement,
                            start: "0% 0%",
                            end: "0% -100%",
                            scrub: 0
                        }
                    });

                    tl.from(targetElement, {
                        xPercent: 110,
                        rotate: 0.001,
                        ease: "Power1.easeOut",
                        duration: 1
                    });

                    tl.to(targetElementHome, {
                        autoAlpha: 0,
                        filter: "blur(0.5em)",
                        scale: 0.8,
                        ease: "none",
                        duration: 0.75
                    }, "<");

                    tl.from(targetElementSpline, {
                        xPercent: -100,
                        rotate: 0.001,
                        ease: "Power1.easeOut",
                        duration: 1
                    }, "<");
                });
            }

        }, // End Desktop Only Scrolltrigger

        // Mobile Only Scrolltrigger
        "(max-width: 720px)": function() {

        } // End Mobile Only Scrolltrigger

    }); // End GSAP Matchmedia
}